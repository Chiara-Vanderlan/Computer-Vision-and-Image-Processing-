#Q4
#For every 3×3 block of the image (without overlapping), replace all corresponding 9 pixels by their average. 
#This operation simulates reducing the image spatial resolution. 
#Repeat this for 5×5 blocks and 7×7 blocks. 

import cv2
import numpy as np

# Load the image
image = cv2.imread('cat.jpg')

# Convert the image to grayscale
image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Obtaining the dimensions of the image
height, width = image_gray.shape[:2]


def process(image, block_size):

    for y in range(0, height, block_size):
        for x in range(0, width, block_size):

            # Define region current block
            region = image[y:y+block_size, x:x+block_size]

            # Calculating the average value
            average = np.mean(region)

            # Replace the block with the average value
            image[y:y+block_size, x:x+block_size] = average

    # Convert the image back
    image = np.uint8(image)
    return image

#applying the filter process and saving the images
processed_image1 = process(image_gray,3)
cv2.imwrite('Q4/Processed image_3x3.jpg', processed_image1)

processed_image2 = process(image_gray,5)
cv2.imwrite('Q4/Processed image_5x5.jpg', processed_image2)

processed_image3 = process(image_gray,7)
cv2.imwrite('Q4/Processed image_7x7.jpg', processed_image3)


cv2.waitKey(0)
cv2.destroyAllWindows()